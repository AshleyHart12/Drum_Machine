{"ast":null,"code":"var _jsxFileName = \"/Users/ashinator/codePractice/FCC/drum-kit/drum-kit/src/App.js\";\nimport React from 'react';\nimport './App.css';\nconst data = [{\n  id: \"base_drum\",\n  letter: \"Q\",\n  src: \"http://cd.textfiles.com/maxsounds/WAV/EFEITOS/BD0025.WAV\"\n}, {\n  id: \"snare_drum\",\n  letter: \"W\",\n  src: \"http://s1download-universal-soundbank.com/wav/4402.wav\"\n}, {\n  id: \"kick_drum\",\n  letter: \"E\",\n  src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/5/5/Perfect%20Kick%20Drum%2014-9411-Free-Loops.com.mp3\"\n}, {\n  id: \"high_hat\",\n  letter: \"A\",\n  src: \"http://www.denhaku.com/r_box/sr16/sr16hat/smallhat.wav\"\n}, {\n  id: \"bongo\",\n  letter: \"S\",\n  src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/1/1/Bongos%2001.wav-9261-Free-Loops.com.mp3\"\n}, {\n  id: \"laser\",\n  letter: \"D\",\n  src: \"http://cd.textfiles.com/warcraftm/MCRAFT/SOUNDS/MAZEICON.WAV\"\n}, {\n  id: \"cowbell\",\n  letter: \"Z\",\n  src: \"http://www.denhaku.com/r_box/tr707/cowbell.wav\"\n}, {\n  id: \"meow\",\n  letter: \"X\",\n  src: \"http://mattersofgrey.com/audio/Minecraft-meow2.mp3\"\n}, {\n  id: \"cymbal\",\n  letter: \"C\",\n  src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/1/1/909%20Ride%2003-5850-Free-Loops.com.mp3\"\n}];\n\nclass Drumpad extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"drum-pad\",\n      id: this.props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.props.letter), React.createElement(\"audio\", {\n      className: \"clip\",\n      id: this.props.letter,\n      src: this.props.src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"drum-machine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Display\"), data.map(d => React.createElement(Drumpad, {\n      id: d.id,\n      letter: d.letter,\n      src: d.src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App; // outer container = id: drum-machine\n// Within drum-machine id: display\n// Within drum-machine -  9 clickable drum pads, className: drum-pad, unique id that describes the audio clip, AND inner text that corresponds Q, W, E, A, S, D, Z, X, C. The drum pads MUST be in this order.\n// Within each .drum-pad, need <audio> element with src= an audio clip, a className of .clip, and an id corresponding to the inner text of its parent .drum-pad (ex: id=\"Q\")\n// when you click .drum-pad, audio element should be triggered. Same with pressing the key associated on keyboard\n// When .drum-pad is triggered, display words describing the audio file is displayed as the inner tet of the #display element","map":{"version":3,"sources":["/Users/ashinator/codePractice/FCC/drum-kit/drum-kit/src/App.js"],"names":["React","data","id","letter","src","Drumpad","Component","render","props","App","constructor","map","d"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,MAAMC,IAAI,GAAG,CACX;AAACC,EAAAA,EAAE,EAAE,WAAL;AAAkBC,EAAAA,MAAM,EAAE,GAA1B;AAA+BC,EAAAA,GAAG,EAAE;AAApC,CADW,EAEX;AAACF,EAAAA,EAAE,EAAE,YAAL;AAAmBC,EAAAA,MAAM,EAAE,GAA3B;AAAgCC,EAAAA,GAAG,EAAE;AAArC,CAFW,EAGX;AAACF,EAAAA,EAAE,EAAE,WAAL;AAAkBC,EAAAA,MAAM,EAAE,GAA1B;AAA+BC,EAAAA,GAAG,EAAE;AAApC,CAHW,EAIX;AAACF,EAAAA,EAAE,EAAE,UAAL;AAAiBC,EAAAA,MAAM,EAAE,GAAzB;AAA8BC,EAAAA,GAAG,EAAE;AAAnC,CAJW,EAKX;AAACF,EAAAA,EAAE,EAAE,OAAL;AAAcC,EAAAA,MAAM,EAAE,GAAtB;AAA2BC,EAAAA,GAAG,EAAE;AAAhC,CALW,EAMX;AAACF,EAAAA,EAAE,EAAE,OAAL;AAAcC,EAAAA,MAAM,EAAE,GAAtB;AAA2BC,EAAAA,GAAG,EAAE;AAAhC,CANW,EAOX;AAACF,EAAAA,EAAE,EAAE,SAAL;AAAgBC,EAAAA,MAAM,EAAE,GAAxB;AAA6BC,EAAAA,GAAG,EAAE;AAAlC,CAPW,EAQX;AAACF,EAAAA,EAAE,EAAE,MAAL;AAAaC,EAAAA,MAAM,EAAE,GAArB;AAA0BC,EAAAA,GAAG,EAAE;AAA/B,CARW,EASX;AAACF,EAAAA,EAAE,EAAE,QAAL;AAAeC,EAAAA,MAAM,EAAE,GAAvB;AAA4BC,EAAAA,GAAG,EAAE;AAAjC,CATW,CAAb;;AAaA,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AAEpCC,EAAAA,MAAM,GAAG;AACJ,WACG;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,EAAE,EAAE,KAAKC,KAAL,CAAWN,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKM,KAAL,CAAWL,MAAf,CADA,EAEA;AACA,MAAA,SAAS,EAAC,MADV;AAEA,MAAA,EAAE,EAAE,KAAKK,KAAL,CAAWL,MAFf;AAGA,MAAA,GAAG,EAAE,KAAKK,KAAL,CAAWJ,GAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADH;AAWJ;;AAdmC;;AAiBtC,MAAMK,GAAN,SAAkBT,KAAK,CAACM,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,CAACF,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD;;AAEDD,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAEGN,IAAI,CAACU,GAAL,CAASC,CAAC,IACT,oBAAC,OAAD;AACA,MAAA,EAAE,EAAEA,CAAC,CAACV,EADN;AAEA,MAAA,MAAM,EAAEU,CAAC,CAACT,MAFV;AAGA,MAAA,GAAG,EAAES,CAAC,CAACR,GAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CADF,CADF;AAcD;;AApB+B;;AAwBlC,eAAeK,GAAf,C,CAEA;AACE;AAEF;AAEE;AAEA;AAEA","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst data = [\n  {id: \"base_drum\", letter: \"Q\", src: \"http://cd.textfiles.com/maxsounds/WAV/EFEITOS/BD0025.WAV\"},\n  {id: \"snare_drum\", letter: \"W\", src: \"http://s1download-universal-soundbank.com/wav/4402.wav\"},\n  {id: \"kick_drum\", letter: \"E\", src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/5/5/Perfect%20Kick%20Drum%2014-9411-Free-Loops.com.mp3\"},\n  {id: \"high_hat\", letter: \"A\", src: \"http://www.denhaku.com/r_box/sr16/sr16hat/smallhat.wav\"},\n  {id: \"bongo\", letter: \"S\", src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/1/1/Bongos%2001.wav-9261-Free-Loops.com.mp3\"},\n  {id: \"laser\", letter: \"D\", src: \"http://cd.textfiles.com/warcraftm/MCRAFT/SOUNDS/MAZEICON.WAV\"},\n  {id: \"cowbell\", letter: \"Z\", src: \"http://www.denhaku.com/r_box/tr707/cowbell.wav\"},\n  {id: \"meow\", letter: \"X\", src: \"http://mattersofgrey.com/audio/Minecraft-meow2.mp3\"},\n  {id: \"cymbal\", letter: \"C\", src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/1/1/909%20Ride%2003-5850-Free-Loops.com.mp3\"}\n\n]\n\nclass Drumpad extends React.Component {\n \n  render() {\n       return (\n          <div className=\"drum-pad\" id={this.props.id}> \n          <p>{this.props.letter}</p>\n          <audio \n          className=\"clip\"\n          id={this.props.letter}\n          src={this.props.src}>\n\n          </audio>\n          </div>\n      )\n  }\n}\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n  }\n\n  render() {\n    return(\n      <div id=\"drum-machine\">\n        <div id=\"display\">\n        <h1>Display</h1>\n          {data.map(d => (\n            <Drumpad \n            id={d.id}\n            letter={d.letter}\n            src={d.src} />\n          ))}\n          </div>\n        {/* <Drumpad /> */}\n      </div>\n    )\n  }\n}\n\n\nexport default App\n\n// outer container = id: drum-machine\n  // Within drum-machine id: display\n\n// Within drum-machine -  9 clickable drum pads, className: drum-pad, unique id that describes the audio clip, AND inner text that corresponds Q, W, E, A, S, D, Z, X, C. The drum pads MUST be in this order.\n\n  // Within each .drum-pad, need <audio> element with src= an audio clip, a className of .clip, and an id corresponding to the inner text of its parent .drum-pad (ex: id=\"Q\")\n\n  // when you click .drum-pad, audio element should be triggered. Same with pressing the key associated on keyboard\n\n  // When .drum-pad is triggered, display words describing the audio file is displayed as the inner tet of the #display element \n\n"]},"metadata":{},"sourceType":"module"}