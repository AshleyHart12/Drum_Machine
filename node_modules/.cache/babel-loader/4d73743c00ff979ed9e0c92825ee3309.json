{"ast":null,"code":"var _jsxFileName = \"/Users/ashinator/codePractice/FCC/drum-kit/drum-kit/src/App.js\";\nimport React from 'react';\nimport './App.css';\nconst data = [{\n  id: \"Q\",\n  letter: \"Q\",\n  src: \"\"\n}, {\n  id: \"W\",\n  letter: \"W\",\n  src: \"\"\n}, {\n  id: \"E\",\n  letter: \"E\",\n  src: \"\"\n}, {\n  id: \"A\",\n  letter: \"A\",\n  src: \"\"\n}, {\n  id: \"S\",\n  letter: \"S\",\n  src: \"\"\n}, {\n  id: \"D\",\n  letter: \"D\",\n  src: \"\"\n}, {\n  id: \"Z\",\n  letter: \"Z\",\n  src: \"\"\n}, {\n  id: \"X\",\n  letter: \"X\",\n  src: \"\"\n}, {\n  id: \"C\",\n  letter: \"C\",\n  src: \"\"\n}];\n\nclass Drumpad extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"drum-pad\",\n      id: this.props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.props.letter));\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"drum-machine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Display\"), data.map(d => React.createElement(Drumpad, {\n      id: this.props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App; // outer container = id: drum-machine\n// Within drum-machine id: display\n// Within drum-machine -  9 clickable drum pads, className: drum-pad, unique id that describes the audio clip, AND inner text that corresponds Q, W, E, A, S, D, Z, X, C. The drum pads MUST be in this order.\n// Within each .drum-pad, need <audio> element with src= an audio clip, a className of .clip, and an id corresponding to the inner text of its parent .drum-pad (ex: id=\"Q\")\n// when you click .drum-pad, audio element should be triggered. Same with pressing the key associated on keyboard\n// When .drum-pad is triggered, display words describing the audio file is displayed as the inner tet of the #display element","map":{"version":3,"sources":["/Users/ashinator/codePractice/FCC/drum-kit/drum-kit/src/App.js"],"names":["React","data","id","letter","src","Drumpad","Component","render","props","App","constructor","map","d"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,MAAMC,IAAI,GAAG,CACX;AAACC,EAAAA,EAAE,EAAE,GAAL;AAAUC,EAAAA,MAAM,EAAE,GAAlB;AAAuBC,EAAAA,GAAG,EAAE;AAA5B,CADW,EAEX;AAACF,EAAAA,EAAE,EAAE,GAAL;AAAUC,EAAAA,MAAM,EAAE,GAAlB;AAAuBC,EAAAA,GAAG,EAAE;AAA5B,CAFW,EAGX;AAACF,EAAAA,EAAE,EAAE,GAAL;AAAUC,EAAAA,MAAM,EAAE,GAAlB;AAAuBC,EAAAA,GAAG,EAAE;AAA5B,CAHW,EAIX;AAACF,EAAAA,EAAE,EAAE,GAAL;AAAUC,EAAAA,MAAM,EAAE,GAAlB;AAAuBC,EAAAA,GAAG,EAAE;AAA5B,CAJW,EAKX;AAACF,EAAAA,EAAE,EAAE,GAAL;AAAUC,EAAAA,MAAM,EAAE,GAAlB;AAAuBC,EAAAA,GAAG,EAAE;AAA5B,CALW,EAMX;AAACF,EAAAA,EAAE,EAAE,GAAL;AAAUC,EAAAA,MAAM,EAAE,GAAlB;AAAuBC,EAAAA,GAAG,EAAE;AAA5B,CANW,EAOX;AAACF,EAAAA,EAAE,EAAE,GAAL;AAAUC,EAAAA,MAAM,EAAE,GAAlB;AAAuBC,EAAAA,GAAG,EAAE;AAA5B,CAPW,EAQX;AAACF,EAAAA,EAAE,EAAE,GAAL;AAAUC,EAAAA,MAAM,EAAE,GAAlB;AAAuBC,EAAAA,GAAG,EAAE;AAA5B,CARW,EASX;AAACF,EAAAA,EAAE,EAAE,GAAL;AAAUC,EAAAA,MAAM,EAAE,GAAlB;AAAuBC,EAAAA,GAAG,EAAE;AAA5B,CATW,CAAb;;AAaA,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AAEpCC,EAAAA,MAAM,GAAG;AACJ,WACG;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,EAAE,EAAE,KAAKC,KAAL,CAAWN,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKM,KAAL,CAAWL,MAAf,CADA,CADH;AAKJ;;AARmC;;AAWtC,MAAMM,GAAN,SAAkBT,KAAK,CAACM,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,CAACF,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD;;AAEDD,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAEGN,IAAI,CAACU,GAAL,CAASC,CAAC,IACT,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAE,KAAKJ,KAAL,CAAWN,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CADF,CADF;AAWD;;AAjB+B;;AAqBlC,eAAeO,GAAf,C,CAEA;AACE;AAEF;AAEE;AAEA;AAEA","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst data = [\n  {id: \"Q\", letter: \"Q\", src: \"\"},\n  {id: \"W\", letter: \"W\", src: \"\"},\n  {id: \"E\", letter: \"E\", src: \"\"},\n  {id: \"A\", letter: \"A\", src: \"\"},\n  {id: \"S\", letter: \"S\", src: \"\"},\n  {id: \"D\", letter: \"D\", src: \"\"},\n  {id: \"Z\", letter: \"Z\", src: \"\"},\n  {id: \"X\", letter: \"X\", src: \"\"},\n  {id: \"C\", letter: \"C\", src: \"\"}\n\n]\n\nclass Drumpad extends React.Component {\n \n  render() {\n       return (\n          <div className=\"drum-pad\" id={this.props.id}> \n          <p>{this.props.letter}</p>\n          </div>\n      )\n  }\n}\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n  }\n\n  render() {\n    return(\n      <div id=\"drum-machine\">\n        <div id=\"display\">\n        <h1>Display</h1>\n          {data.map(d => (\n            <Drumpad id={this.props.id} />\n          ))}\n          </div>\n        {/* <Drumpad /> */}\n      </div>\n    )\n  }\n}\n\n\nexport default App\n\n// outer container = id: drum-machine\n  // Within drum-machine id: display\n\n// Within drum-machine -  9 clickable drum pads, className: drum-pad, unique id that describes the audio clip, AND inner text that corresponds Q, W, E, A, S, D, Z, X, C. The drum pads MUST be in this order.\n\n  // Within each .drum-pad, need <audio> element with src= an audio clip, a className of .clip, and an id corresponding to the inner text of its parent .drum-pad (ex: id=\"Q\")\n\n  // when you click .drum-pad, audio element should be triggered. Same with pressing the key associated on keyboard\n\n  // When .drum-pad is triggered, display words describing the audio file is displayed as the inner tet of the #display element \n\n"]},"metadata":{},"sourceType":"module"}